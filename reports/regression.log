Traceback (most recent call last):
  File "/usr/share/miniconda/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/share/miniconda/lib/python3.8/site-packages/nbclient/client.py", line 1082, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/usr/share/miniconda/lib/python3.8/site-packages/nbclient/client.py", line 535, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda/lib/python3.8/site-packages/nbclient/client.py", line 827, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/usr/share/miniconda/lib/python3.8/site-packages/nbclient/client.py", line 735, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply['content'])
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
rng = jax.random.PRNGKey(0)
vfit = jax.vmap(adam_fit, (0, 0, 0, 0, 0, None))
losses = []
for i,f in enumerate(feature_sizes):
    l = jnp.mean(vfit(fts[i], *train_data, *test_data, rng), axis=1)
    losses.append(l)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
[0;32m<ipython-input-22-f5a2a5662a0f>[0m in [0;36m<module>[0;34m[0m
[1;32m      3[0m [0mlosses[0m [0;34m=[0m [0;34m[[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[1;32m      4[0m [0;32mfor[0m [0mi[0m[0;34m,[0m[0mf[0m [0;32min[0m [0menumerate[0m[0;34m([0m[0mfeature_sizes[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 5[0;31m     [0ml[0m [0;34m=[0m [0mjnp[0m[0;34m.[0m[0mmean[0m[0;34m([0m[0mvfit[0m[0;34m([0m[0mfts[0m[0;34m[[0m[0mi[0m[0;34m][0m[0;34m,[0m [0;34m*[0m[0mtrain_data[0m[0;34m,[0m [0;34m*[0m[0mtest_data[0m[0;34m,[0m [0mrng[0m[0;34m)[0m[0;34m,[0m [0maxis[0m[0;34m=[0m[0;36m1[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      6[0m     [0mlosses[0m[0;34m.[0m[0mappend[0m[0;34m([0m[0ml[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/share/miniconda/lib/python3.8/site-packages/jax/numpy/lax_numpy.py[0m in [0;36mmean[0;34m(a, axis, dtype, out, keepdims)[0m
[1;32m   1797[0m [0;34m@[0m[0m_wraps[0m[0;34m([0m[0mnp[0m[0;34m.[0m[0mmean[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1798[0m [0;32mdef[0m [0mmean[0m[0;34m([0m[0ma[0m[0;34m,[0m [0maxis[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0mdtype[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0mout[0m[0;34m=[0m[0;32mNone[0m[0;34m,[0m [0mkeepdims[0m[0;34m=[0m[0;32mFalse[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1799[0;31m   [0m_check_arraylike[0m[0;34m([0m[0;34m"mean"[0m[0;34m,[0m [0ma[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1800[0m   [0;32mif[0m [0mout[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1801[0m     [0;32mraise[0m [0mValueError[0m[0;34m([0m[0;34m"mean does not support the `out` argument."[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/share/miniconda/lib/python3.8/site-packages/jax/numpy/lax_numpy.py[0m in [0;36m_check_arraylike[0;34m(fun_name, *args)[0m
[1;32m    295[0m                     if not _arraylike(arg))
[1;32m    296[0m     [0mmsg[0m [0;34m=[0m [0;34m"{} requires ndarray or scalar arguments, got {} at position {}."[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 297[0;31m     [0;32mraise[0m [0mTypeError[0m[0;34m([0m[0mmsg[0m[0;34m.[0m[0mformat[0m[0;34m([0m[0mfun_name[0m[0;34m,[0m [0mtype[0m[0;34m([0m[0marg[0m[0;34m)[0m[0;34m,[0m [0mpos[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    298[0m [0;34m[0m[0m
[1;32m    299[0m [0;34m[0m[0m

[0;31mTypeError[0m: mean requires ndarray or scalar arguments, got <class 'tuple'> at position 0.
TypeError: mean requires ndarray or scalar arguments, got <class 'tuple'> at position 0.

